SET SERVEROUTPUT ON
--Function to calculate number of branches for each city id
CREATE OR REPLACE FUNCTION CALC_BRANCHES_NO(CITY_ID1 NUMBER)
RETURN NUMBER
IS
NO_BRANCHES NUMBER;
BEGIN
SELECT COUNT(*)
INTO NO_BRANCHES
FROM BRANCHES
WHERE CITY_ID = CITY_ID1;
RETURN NO_BRANCHES;
END;
SHOW ERRORS; --Procedure to update the employees bonus at each branch
CREATE OR REPLACE PROCEDURE UPDATE_BRANCH_BONUS( BRANCH_BONUS NUMBER, CITY_ID
NUMBER)
IS
BEGIN
EXECUTE IMMEDIATE 'UPDATE BRANCHES
SET BRANCH_BONUS = ' || BRANCH_BONUS || ' WHERE CITY_ID = ' || CITY_ID || '';
END;
SHOW ERRORS
--Function to calculate number of managers and employees at each branch
CREATE OR REPLACE FUNCTION CALC_NO_MGRS_EMPS( NO_MGRS OUT NUMBER, BR_ID NUMBER)
RETURN NUMBER
IS
NO_EMPLOYEES NUMBER;
BEGIN
SELECT COUNT(*)
INTO NO_EMPLOYEES
FROM BRANCH_EMPLOYEES
WHERE BRANCH_ID = BR_ID AND EMPLOYEE_POSITION = 'EMP';
SELECT COUNT(*)
INTO NO_MGRS
FROM BRANCH_EMPLOYEES
WHERE BRANCH_ID = BR_ID AND EMPLOYEE_POSITION = 'MGR';
RETURN NO_EMPLOYEES;
END;
SHOW ERRORS; --Procedure to update th employees bonus at each branch
CREATE OR REPLACE PROCEDURE UPDATE_EMPLOYEES_BONUS( MGR_BONUS NUMBER, EMP_BONUS NUMBER, BRANCH_ID NUMBER)
IS
BEGIN
EXECUTE IMMEDIATE 'UPDATE BRANCH_EMPLOYEES
SET EMPLOYEE_BONUS = ' || MGR_BONUS || ' WHERE EMPLOYEE_POSITION = ''MGR'' AND BRANCH_ID = ' || BRANCH_ID || '';
EXECUTE IMMEDIATE 'UPDATE BRANCH_EMPLOYEES
SET EMPLOYEE_BONUS = ' || EMP_BONUS || ' WHERE EMPLOYEE_POSITION = ''EMP'' AND BRANCH_ID = ' || BRANCH_ID || '';
END;
SHOW ERRORS
-- The main block
DECLARE
CURSOR CITIES_CURSOR IS SELECT * FROM CITIES;
BRANCHES_NO NUMBER; BRANCH_BONUS NUMBER; BR_50_BONUS1 NUMBER;
NO_MGRS NUMBER; NO_EMPLOYEES NUMBER; BR_50_BONUS2 NUMBER;
EMP_BONUS NUMBER; MGR_BONUS NUMBER;
CURSOR BRANCHES_CURSOR IS SELECT * FROM BRANCHES;
BEGIN
FOR EACH_CITY IN CITIES_CURSOR LOOP
BRANCHES_NO := CALC_BRANCHES_NO(EACH_CITY.CITY_ID);
BRANCH_BONUS := EACH_CITY.CITY_BONUS / BRANCHES_NO ;
UPDATE_BRANCH_BONUS(BRANCH_BONUS, EACH_CITY.CITY_ID);
END LOOP;
FOR EACH_BRANCH IN BRANCHES_CURSOR LOOP
BR_50_BONUS1 := EACH_BRANCH.BRANCH_BONUS/2;
BR_50_BONUS2 := BR_50_BONUS1;
NO_EMPLOYEES := CALC_NO_MGRS_EMPS(NO_MGRS, EACH_BRANCH.BRANCH_ID);
EMP_BONUS := BR_50_BONUS1/NO_EMPLOYEES;
MGR_BONUS := BR_50_BONUS2/NO_MGRS;
UPDATE_EMPLOYEES_BONUS(MGR_BONUS, EMP_BONUS, EACH_BRANCH.BRANCH_ID);
END LOOP;
DBMS_OUTPUT.PUT_LINE( 'Mission Done');
END;
